<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	 xsi:schemaLocation="
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
        
 	<global-method-security pre-post-annotations="enabled"/> 
	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true" disable-url-rewriting="true">
		<access-denied-handler error-page="/errors" />
		<intercept-url pattern="/font-awesome/**"  access="permitAll" />
		<intercept-url pattern="/js/**"  access="permitAll" />
		<intercept-url pattern="/css/**"  access="permitAll" />
		<intercept-url pattern="/bootstrap/**"  access="permitAll" />
		<intercept-url pattern="/fonts/**"  access="permitAll" />
		<intercept-url pattern="/vendors/**"  access="permitAll" />
		<intercept-url pattern="/images/**"  access="permitAll" />
		<!-- <intercept-url pattern="/login" access="permitAll" />
 		<intercept-url pattern="/**" access="isAuthenticated()" />  --> 
		
		<custom-filter before="FORM_LOGIN_FILTER" ref="MyAuthFilter" />

		<!-- <form-login 
		    login-page="/" 
			password-parameter="password"
			username-parameter="username"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customFailureHandler" 
			/> -->
			<form-login login-page="/" />
		<logout logout-success-url="/"
			delete-cookies="JSESSIONID" 
			invalidate-session="true"/> 
	 		<!-- <remember-me key="LMS" token-validity-seconds="864000" />   -->
	
		<csrf />
	</http> 
	
	<beans:bean id="customAuthenticationSuccessHandler" class="com.softcake.sim.common.CustomAuthenticationSuccessHandler" />
	<beans:bean id="customFailureHandler" class="com.softcake.sim.common.CustomAuthenticationFailureHandler" />
	<beans:bean id="app" class="com.softcake.sim.utils.AppUtils">
		<beans:property name="apiUrl" value="${web.api.url}" />
		<beans:property name="webUrl" value="${web.default.url}" />
	</beans:bean>
	<beans:bean id="verifyRecaptcha" class="com.softcake.sim.common.VerifyRecaptcha">
		<beans:property name="secret" value="${captcha.secretKey}" />
		<beans:property name="url" value="${captcha.googleUrl}" />
	</beans:bean>
	<beans:bean id="userDetailService" class="com.softcake.sim.common.UserDetailService">
		<beans:property name="app" ref="app" />
	</beans:bean>
 	<!-- <authentication-manager>
		<authentication-provider user-service-ref="userDetailService" >
			<password-encoder hash="bcrypt" />    
		</authentication-provider>
	</authentication-manager>  -->
	
	<beans:bean id="generateMenu" class="com.softcake.sim.common.GenerateMenu">
		<beans:property name="url" value="${web.default.url}" />
	</beans:bean>
	
	<beans:bean id="MyAuthFilter" class="com.softcake.sim.common.LoginAuthenticationFilter">
		<beans:property name="app" ref="app" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="authenticationFailureHandler" ref="customFailureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="customAuthenticationSuccessHandler" />
	</beans:bean>
	
	<!-- <beans:bean id="myAuthenticationManager" class="com.softcake.sim.common.LoginAuthenticationProvider">
		<beans:property name="app" ref="app" />
	</beans:bean> -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailService"/>
	    <!-- <authentication-provider ref="myAuthenticationManager" /> -->
	        <!-- <password-encoder hash="bcrypt" /> -->
	    <!-- </authentication-provider> -->
	  </authentication-manager>

</beans:beans>